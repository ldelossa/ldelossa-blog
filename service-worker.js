!function(e){var t={};function n(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(s,r,function(t){return e[t]}.bind(null,r));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);const s=["client/21d5f7fc0374dd879b15/about.0.js","client/21d5f7fc0374dd879b15/blog.1.js","client/21d5f7fc0374dd879b15/blog_$slug.2.js","client/21d5f7fc0374dd879b15/index.3.js","client/21d5f7fc0374dd879b15/main.js","client/21d5f7fc0374dd879b15/projects.5.js","client/21d5f7fc0374dd879b15/resume.6.js"].concat(["service-worker-index.html","c.svg","cplusplus.svg","favicon.png","github-markdown.css","github.svg","global.css","gnu.svg","go.svg","googlemaps.svg","great-success.png","headshot.jpg","linkedin.svg","linux.svg","logo-192.png","logo-512.png","manifest.json","martin-klepmann-sequential-consistency.png","pki_hierarchy_diagram.png","profile001.png","profile002.png","python.svg","redhat.svg","rust.svg","twitter.svg"]),r=new Set(s);self.addEventListener("install",e=>{e.waitUntil(caches.open("cache1603240670197").then(e=>e.addAll(s)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async e=>{for(const t of e)"cache1603240670197"!==t&&await caches.delete(t);self.clients.claim()}))}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const t=new URL(e.request.url);t.protocol.startsWith("http")&&(t.hostname===self.location.hostname&&t.port!==self.location.port||(t.host===self.location.host&&r.has(t.pathname)?e.respondWith(caches.match(e.request)):"only-if-cached"!==e.request.cache&&e.respondWith(caches.open("offline1603240670197").then(async t=>{try{const n=await fetch(e.request);return t.put(e.request,n.clone()),n}catch(n){const s=await t.match(e.request);if(s)return s;throw n}}))))})}]);